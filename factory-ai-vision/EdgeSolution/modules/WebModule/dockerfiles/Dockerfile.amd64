# =========================================================
# === Build Static UI                                   ===
# =========================================================
FROM node:12 as builder

WORKDIR /
COPY ui_v2 app
WORKDIR /app
RUN rm -rf node_modules/
RUN rm -rf build/
RUN yarn install --production
RUN yarn build

# =========================================================
# === Build Backend Base                                ===
# =========================================================
FROM amd64/python:3.8 as backend-base

RUN apt-get update
# libgl for opencv
RUN apt-get install -y libgl1-mesa-glx


# =========================================================
# === Build Backend Production                          ===
# =========================================================
FROM backend-base as backend-production

WORKDIR /app

COPY backend_v2/requirements requirements
RUN pip install -r ./requirements/production-x86.txt

COPY backend_v2/manage.py .
COPY backend_v2/config.py .
COPY backend_v2/vision_on_edge vision_on_edge
COPY backend_v2/configs configs
COPY backend_v2/docker-scripts docker-scripts

RUN rm -rf ui_production
COPY --from=builder /app/build vision_on_edge/ui_production

COPY backend_v2/docker-scripts/* /app/docker-scripts/
RUN sed -i 's/\r$//g' /app/docker-scripts/entrypoint
RUN sed -i 's/\r$//g' /app/docker-scripts/start-django
RUN sed -i 's/\r$//g' /app/docker-scripts/start-celeryworker
RUN sed -i 's/\r$//g' /app/docker-scripts/start-celerybeat
RUN sed -i 's/\r$//g' /app/docker-scripts/start-celeryflower
RUN chmod +x /app/docker-scripts/entrypoint
RUN chmod +x /app/docker-scripts/start-django
RUN chmod +x /app/docker-scripts/start-celeryworker
RUN chmod +x /app/docker-scripts/start-celerybeat
RUN chmod +x /app/docker-scripts/start-celeryflower
RUN cp /app/docker-scripts/* /bin/

WORKDIR /app
ENTRYPOINT ["entrypoint"]
