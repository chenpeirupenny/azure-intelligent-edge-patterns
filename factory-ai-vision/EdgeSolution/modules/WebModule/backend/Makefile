PACKAGE := webmodule
MODULE := $(PACKAGE)
PYTHON := $$(which python3)
PIP := $(PYTHON) -m pip

.PHONY: help
help: ## show help message
	@awk 'BEGIN {FS = ":.*?## "} /^[a-zA-Z0-9_-]+:.*?## / {gsub("\\\\n",sprintf("\n%22c",""), $$2);printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}' $(MAKEFILE_LIST)

.PHONY: install
install: requirements/production-x86.txt ## install dependencies
	@$(PIP) install -r $<

.PHONY: install-dev
install-dev: requirements/local.txt ## install dev dependencies
	@echo "Installing dependencies dependencies..."
	@$(PIP) install -r $<
	@echo "Installing develop dependencies, done."

.PHONY: install-pre-commit
install-pre-commit: ## install pre-commit hook
	@echo "Installing pre-commit hook..."
	@pre-commit install
	@echo "Installing pre-commit hook, done."

.PHONY: uninstall-pre-commit
uninstall-pre-commit: ## install pre-commit hook
	@echo "Unistalling pre-commit hook..."
	@pre-commit uninstall
	@echo "Uninstalling pre-commit hook, done."

.PHONY: run
run:
	@$(PYTHON) manage.py migrate
	@$(PYTHON) manage.py runserver

.PHONY: test
test: ## unit test
	@echo "Testing..."
	@pytest
	@echo "Testing passed\n"

.PHONY: coverage-html
coverage-html: ## Dev
	@echo "Running coverage..."
	@pytest --cov=vision_on_edge --cov-report=html
	@echo "Coverage run complete\n"

.PHONY: coverage-xml
coverage-xml: ## Pipeline publish result
	@echo "Running coverage..."
	@pytest --cov=vision_on_edge --junitxml=junit/test-results.xml
	@echo "Coverage run complete\n"
